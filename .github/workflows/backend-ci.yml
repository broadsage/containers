name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  lint-and-test:
    name: Lint and Test Backend
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio flake8 black isort
      
      - name: Run Black (Code Formatting)
        run: |
          cd backend
          black --check app/
      
      - name: Run isort (Import Sorting)
        run: |
          cd backend
          isort --check-only app/
      
      - name: Run Flake8 (Linting)
        run: |
          cd backend
          flake8 app/ --max-line-length=100 --exclude=__pycache__
      
      - name: Run Tests
        run: |
          cd backend
          pytest tests/ -v --cov=app --cov-report=xml --cov-report=html
        env:
          MONGO_URL: mongodb://localhost:27017/test_db
          SECRET_KEY: test_secret_key_for_ci
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.11'
        with:
          files: ./backend/coverage.xml
          flags: backend
          name: backend-coverage

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Bandit Security Scan
        run: |
          pip install bandit[toml]
          cd backend
          bandit -r app/ -f json -o bandit-report.json || true
      
      - name: Run Safety Check
        run: |
          pip install safety
          cd backend
          safety check --file=requirements.txt || true

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: openhub-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
