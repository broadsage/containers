name: Frontend CI

on:
  push:
    branches: [main, nextjs]
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [main, nextjs]
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  lint-and-test:
    name: Lint and Test Frontend
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Run ESLint
        run: |
          cd apps/web
          yarn lint
      
      - name: Run TypeScript Type Check
        run: |
          cd apps/web
          yarn tsc --noEmit
      
      - name: Run Tests
        run: |
          cd apps/web
          yarn test --coverage --watchAll=false
        env:
          CI: true
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.node-version == '20.x'
        with:
          files: ./apps/web/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
      
      - name: Build Application
        run: |
          cd apps/web
          yarn build
        env:
          NODE_ENV: production

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run npm audit
        run: |
          cd apps/web
          yarn audit || true
      
      - name: Run Snyk Security Scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: false
          tags: container-directory-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
